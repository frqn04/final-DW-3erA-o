# Generated by Django 5.2.5 on 2025-08-20 00:33

import datetime
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('escuelas', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Alumno',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(help_text='Nombre(s) de la persona. Solo letras y espacios.', max_length=50, validators=[django.core.validators.RegexValidator(message='El nombre solo puede contener letras, espacios y acentos.', regex='^[a-zA-ZáéíóúÁÉÍÓÚñÑ\\s]+$')], verbose_name='Nombre(s)')),
                ('last_name', models.CharField(help_text='Apellido(s) de la persona. Solo letras y espacios.', max_length=50, validators=[django.core.validators.RegexValidator(message='El nombre solo puede contener letras, espacios y acentos.', regex='^[a-zA-ZáéíóúÁÉÍÓÚñÑ\\s]+$')], verbose_name='Apellido(s)')),
                ('dni', models.CharField(error_messages={'unique': 'Ya existe una persona con este DNI en el sistema.'}, help_text='Documento Nacional de Identidad. Entre 7 y 8 dígitos.', max_length=8, unique=True, validators=[django.core.validators.RegexValidator(message='El DNI debe contener entre 7 y 8 dígitos numéricos.', regex='^\\d{7,8}$')], verbose_name='DNI')),
                ('email', models.EmailField(error_messages={'unique': 'Ya existe una persona con este email en el sistema.'}, help_text='Dirección de correo electrónico válida.', max_length=254, unique=True, validators=[django.core.validators.EmailValidator()], verbose_name='Correo Electrónico')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, help_text='Fecha y hora de creación del registro.', verbose_name='Fecha de Creación')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, help_text='Fecha y hora de la última actualización.', verbose_name='Fecha de Actualización')),
                ('legajo', models.CharField(error_messages={'unique': 'Ya existe un alumno con este legajo.'}, help_text='Número único de identificación académica del alumno.', max_length=20, unique=True, verbose_name='Legajo')),
                ('fecha_ingreso', models.DateField(default=django.utils.timezone.now, help_text='Fecha de ingreso del alumno a la institución.', verbose_name='Fecha de Ingreso')),
                ('activo', models.BooleanField(default=True, help_text='Indica si el alumno está actualmente cursando.', verbose_name='Activo')),
                ('observaciones', models.TextField(blank=True, help_text='Notas adicionales sobre el alumno (máximo 500 caracteres).', max_length=500, verbose_name='Observaciones')),
                ('carrera', models.ForeignKey(blank=True, help_text='Carrera en la que está inscripto el alumno. Se protege contra eliminación.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='alumnos', to='escuelas.carrera', verbose_name='Carrera')),
            ],
            options={
                'verbose_name': 'Alumno',
                'verbose_name_plural': 'Alumnos',
                'ordering': ['carrera__nombre', 'last_name', 'first_name'],
                'indexes': [models.Index(fields=['legajo'], name='students_al_legajo_b7a87c_idx'), models.Index(fields=['carrera', 'activo'], name='students_al_carrera_72d532_idx'), models.Index(fields=['fecha_ingreso'], name='students_al_fecha_i_833764_idx'), models.Index(fields=['dni'], name='students_al_dni_b88951_idx')],
                'constraints': [models.CheckConstraint(condition=models.Q(('fecha_ingreso__lte', datetime.date(2025, 8, 20))), name='fecha_ingreso_no_futura')],
            },
        ),
    ]
