# Generated by Django 5.2.5 on 2025-08-14 23:12

import django.contrib.auth.models
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(help_text='Dirección de correo electrónico única del usuario', max_length=254, unique=True, verbose_name='Correo electrónico')),
                ('dni', models.CharField(help_text='Documento Nacional de Identidad o Cédula de Identidad', max_length=20, unique=True, verbose_name='DNI/Cédula')),
                ('role', models.CharField(choices=[('ADMIN', 'Administrador'), ('ALUMNO', 'Alumno'), ('INVITADO', 'Invitado')], default='INVITADO', help_text='Tipo de usuario en el sistema escolar', max_length=10, verbose_name='Rol del usuario')),
                ('must_change_password', models.BooleanField(default=True, help_text='Indica si el usuario debe cambiar su contraseña en el próximo inicio de sesión', verbose_name='Debe cambiar contraseña')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
                'db_table': 'users_user',
                'ordering': ['last_name', 'first_name'],
                'indexes': [models.Index(fields=['email'], name='users_user_email_6f2530_idx'), models.Index(fields=['dni'], name='users_user_dni_287748_idx'), models.Index(fields=['role'], name='users_user_role_36d76d_idx')],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
