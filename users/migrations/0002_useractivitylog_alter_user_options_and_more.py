# Generated by Django 5.2.5 on 2025-08-19 22:12

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserActivityLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(choices=[('LOGIN', 'Inicio de sesión'), ('LOGOUT', 'Cierre de sesión'), ('PASSWORD_CHANGE', 'Cambio de contraseña'), ('FAILED_LOGIN', 'Intento de login fallido'), ('ACCOUNT_LOCKED', 'Cuenta bloqueada'), ('PROFILE_UPDATE', 'Actualización de perfil'), ('ROLE_CHANGE', 'Cambio de rol'), ('STATUS_CHANGE', 'Cambio de estado')], max_length=20, verbose_name='Tipo de actividad')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Fecha y hora')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='Dirección IP')),
                ('user_agent', models.TextField(blank=True, verbose_name='User Agent')),
                ('details', models.JSONField(blank=True, default=dict, verbose_name='Detalles adicionales')),
            ],
            options={
                'verbose_name': 'Log de Actividad de Usuario',
                'verbose_name_plural': 'Logs de Actividad de Usuarios',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.AlterModelOptions(
            name='user',
            options={'ordering': ['last_name', 'first_name'], 'permissions': [('can_manage_users', 'Puede gestionar usuarios'), ('can_reset_passwords', 'Puede resetear contraseñas'), ('can_change_user_roles', 'Puede cambiar roles de usuarios'), ('can_view_user_reports', 'Puede ver reportes de usuarios')], 'verbose_name': 'Usuario', 'verbose_name_plural': 'Usuarios'},
        ),
        migrations.AlterModelManagers(
            name='user',
            managers=[
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='address',
            field=models.TextField(blank=True, help_text='Dirección física del usuario', verbose_name='Dirección'),
        ),
        migrations.AddField(
            model_name='user',
            name='birth_date',
            field=models.DateField(blank=True, help_text='Fecha de nacimiento del usuario', null=True, verbose_name='Fecha de nacimiento'),
        ),
        migrations.AddField(
            model_name='user',
            name='created_by',
            field=models.ForeignKey(blank=True, help_text='Usuario que creó esta cuenta', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_users', to=settings.AUTH_USER_MODEL, verbose_name='Creado por'),
        ),
        migrations.AddField(
            model_name='user',
            name='failed_login_attempts',
            field=models.PositiveIntegerField(default=0, help_text='Número de intentos de login fallidos consecutivos', verbose_name='Intentos fallidos de login'),
        ),
        migrations.AddField(
            model_name='user',
            name='last_failed_login',
            field=models.DateTimeField(blank=True, help_text='Fecha y hora del último intento de login fallido', null=True, verbose_name='Último intento fallido'),
        ),
        migrations.AddField(
            model_name='user',
            name='last_password_reset',
            field=models.DateTimeField(blank=True, help_text='Fecha del último reset de contraseña', null=True, verbose_name='Último reset de contraseña'),
        ),
        migrations.AddField(
            model_name='user',
            name='password_changed_at',
            field=models.DateTimeField(blank=True, help_text='Última vez que el usuario cambió su contraseña', null=True, verbose_name='Fecha de cambio de contraseña'),
        ),
        migrations.AddField(
            model_name='user',
            name='phone',
            field=models.CharField(blank=True, help_text='Número de teléfono del usuario', max_length=20, verbose_name='Teléfono'),
        ),
        migrations.AddField(
            model_name='user',
            name='status',
            field=models.CharField(choices=[('ACTIVE', 'Activo'), ('INACTIVE', 'Inactivo'), ('SUSPENDED', 'Suspendido'), ('PENDING', 'Pendiente de Aprobación')], default='PENDING', help_text='Estado actual del usuario en el sistema', max_length=15, verbose_name='Estado del usuario'),
        ),
        migrations.AddField(
            model_name='user',
            name='uuid',
            field=models.UUIDField(default=uuid.uuid4, editable=False, help_text='Identificador único universal del usuario', unique=True, verbose_name='UUID'),
        ),
        migrations.AlterField(
            model_name='user',
            name='role',
            field=models.CharField(choices=[('ADMIN', 'Administrador'), ('ALUMNO', 'Alumno'), ('PROFESOR', 'Profesor'), ('PADRE', 'Padre/Tutor'), ('INVITADO', 'Invitado')], default='INVITADO', help_text='Tipo de usuario en el sistema escolar', max_length=15, verbose_name='Rol del usuario'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['status'], name='users_user_status_07d06d_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['uuid'], name='users_user_uuid_0206f4_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['created_by'], name='users_user_created_8bd1f9_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['last_login'], name='users_user_last_lo_5f84ec_idx'),
        ),
        migrations.AddField(
            model_name='useractivitylog',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activity_logs', to=settings.AUTH_USER_MODEL, verbose_name='Usuario'),
        ),
        migrations.AddIndex(
            model_name='useractivitylog',
            index=models.Index(fields=['user', '-timestamp'], name='users_usera_user_id_832d5b_idx'),
        ),
        migrations.AddIndex(
            model_name='useractivitylog',
            index=models.Index(fields=['activity_type', '-timestamp'], name='users_usera_activit_bcb95e_idx'),
        ),
    ]
